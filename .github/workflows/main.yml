name: Pipeline build-and-push

on:
  push:
    branches: [ "main", "develop", "staging" ]
  pull_request:
    branches: [ "main", "develop", "staging" ]
  workflow_dispatch:

permissions:
  pull-requests: read
  contents: read
  pages: write
  packages: write
  attestations: write
  id-token: write

jobs:
#  Analysis:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Analyze with SonarCloud
#        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        with:
#          # Additional arguments for the SonarScanner CLI
#          args:
#            -Dsonar.projectKey=edersonrnunes_frontierai
#            -Dsonar.organization=edersonrnunes
#          projectBaseDir: .

  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.3'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check out the repo
      uses: actions/checkout@v5

    - name: Log in to Docker Hub
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/frontierai-backend

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/frontierai-backend:${{ github.ref_name }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v3
      with:
        subject-name: index.docker.io/${{ secrets.DOCKER_USERNAME }}/frontierai-backend
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

#  deploy:
#    needs: build-and-push
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4

#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1

#      - name: Update Kubeconfig for EKS
#        run: aws eks update-kubeconfig --name cluster-apps --region us-east-1

#      - name: Set configmap
#        run: kubectl apply -f aws/tvg-simple-backend-configmap.yml

#      - name: Set secret
#        run: kubectl apply -f aws/tvg-simple-backend-secret.yml

#      - name: Deploy Elasticsearch
#        run: kubectl apply -f aws/kubernetes.yml